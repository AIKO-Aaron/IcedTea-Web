2010-10-25  Omair Majid  <omajid@redhat.com>

	* net/sourceforge/jnlp/ExtensionDesc.java: Import Translator.R and use
	that.
	* net/sourceforge/jnlp/JNLPFile.java: Import Translator.R.
	(R): Remove.
	* net/sourceforge/jnlp/JREDesc.java: Import Translator.R.
	(checkHeapSize): Use R instead of JNLPRuntime.getMessage.
	* net/sourceforge/jnlp/Launcher.java: Import Translator.R.
	(R): Remove.
	* net/sourceforge/jnlp/Parser.java: Import Translator.R
	(R(String)): Remove.
	(R(String,Object)): Remove.
	(R(String,Object,Object)): Remove.
	(R(String,Object,Object,Object)): Remove.
	* net/sourceforge/jnlp/cache/CacheEntry.java: Import Translator.R
	(CacheEntry): Use R instead of JNLPRuntime.getMessage.
	* net/sourceforge/jnlp/cache/CacheUtil.java: Import Translator.R
	(R(String)): Remove.
	(R(String,Object)): Remove.
	* net/sourceforge/jnlp/cache/DefaultDownloadIndicator.java: Import
	Translator.R and use that instead of JNLPRuntime.getMessage.
	* net/sourceforge/jnlp/runtime/Boot.java: Import Translator.R.
	(R(String)): Remove.
	(R(String, Object)): Remove.
	(run): Use R instead of JNLPRuntime.getMessage.
	* net/sourceforge/jnlp/runtime/JNLPClassLoader.java: Import Translator.R.
	(R): Remove.
	* net/sourceforge/jnlp/runtime/JNLPSecurityManager.java: Import
	Translator.R.  Use it instead of JNLPRuntime.getMeesage.
	(R): Remove.
	* net/sourceforge/jnlp/security/AccessWarningPane.java: Import
	Translator.R.
	* net/sourceforge/jnlp/security/CertWarningPane.java: Likewise.
	* net/sourceforge/jnlp/security/HttpsCertVerifier.java: Import
	Translator.R.
	(R(String)): Remove.
	(R(String,String,String)): Remove.
	* net/sourceforge/jnlp/security/MoreInfoPane.java: Import Translator.R.
	* net/sourceforge/jnlp/security/SecurityDialogPanel.java
	(R(String)): Remove.
	(R(String,Object)): Remove.
	* net/sourceforge/jnlp/services/ServiceUtil.java
	(R): Remove.
	* net/sourceforge/jnlp/services/SingleInstanceLock.java: Import
	Translator.R
	(R(String)): Remove.
	(R(String,Object)): Remove.
	* net/sourceforge/jnlp/tools/JarSigner.java: Import Translator.R.
	(R): Remove.
	* net/sourceforge/jnlp/runtime/Translator.java: New file
	(R(String,Object...)): New method.

2010-10-25  Andrew Su <asu@redhat.com>

	* Makefile.am:
	(clean-IcedTeaPlugin): Remove launcher folder first.
	(clean-plugin): Removed called to remove launcher folder

2010-10-22  Omair Majid  <omajid@redhat.com>

	* netx/net/sourceforge/jnlp/NetxPanel.java
	(runLoader): Do not initialize JNLPRuntime here.
	(createAppletThreads): Initialize JNLPRuntim here.
	* netx/net/sourceforge/jnlp/runtime/ApplicationInstance.java:
	Switch from SecurityWarningDialog.AccessType to
	SecurityWarning.AccessType.
	* netx/net/sourceforge/jnlp/runtime/JNLPClassLoader.java
	(getInstance(JNLPFile,UpdatePolicy)): Switch to SecurityWarning.
	(initializeResources): Likewise.
	(checkTrustWithUser): Likewise.
	* netx/net/sourceforge/jnlp/runtime/JNLPRuntime.java:
	Add securityDialogMesasgeHandler.
	(initialize): Set System look and feel. Start security thread.
	(startSecurityThread): New method. Starts a thread to show security
	dialogs.
	(getSecurityDialogHandler): Returns the securityDialogMessageHandler.
	* netx/net/sourceforge/jnlp/runtime/JNLPSecurityManager.java:
	Switch from SecurityWarningDialog.AccessType to
	SecurityWarning.AccessType.
	(checkAwtEventQueueAccess): New method. Skeleton code for allowing
	EventQueue acccess to applets.
	* netx/net/sourceforge/jnlp/security/AccessWarningPane.java:
	Switch from SecurityWarningDialog.AccessType to
	SecurityWarning.AccessType.
	* netx/net/sourceforge/jnlp/security/CertWarningPane.java:
	Likewise.
	* netx/net/sourceforge/jnlp/security/SecurityWarningDialog.java:
	Move DialogType and AccessType to SecurityWarning.
	(SecurityWarningDialog(DialogType,AccessType,JNLPFile,CertVerifier,
	X509Certificate,Object[])): New method. The catch-all construction.
	(SecurityWarningDialog(DialogType,AccessType,JNLPFile): Delegate to
	the new constructor.
	(SecurityWarningDialog(DialogType,AccessType,JNLPFile,CertVerifier)):
	Likewise.
	(SecurityWarningDialog(DialogType,AccessType,CertVerifier)): Likewise.
	(SecurityWarningDialog(DialogType,AccessType,JNLPFile,Object[])):
	Likewise.
	(SecurityWarningDialog(DialogType,X509Certificate)): Likewise.
	(showAccessWarningDialog(AccessType,JNLPFile)): Move to SecurityWarning
	class.
	(showAccessWarningDialog(AccessType,JNLPFile,Object[])): Likewise.
	(showNotAllSignedWarningDialog(JNLPFile)): Likewise.
	(showCertWarningDialog(AccessType,JNLPFile,CertVerifier)): Likewise.
	(showAppletWarning): Likewise.
	(initDialog): Make dialog non modal and remove window closing listener.
	(getValue): Make public.
	(dispose): New method. Notify listeners.
	(notifySelectionMade): New method. Notify listeners that user has made
	a decision.
	(addActionListener): New method. Add a listener to be notified when
	user makes a decision about this security warning.
	* netx/net/sourceforge/jnlp/security/VariableX509TrustManager.java:
	Switch from SecurityWarningDialog.AccessType to
	SecurityWarning.AccessType.
	* netx/net/sourceforge/jnlp/services/ServiceUtil.java: Likewise.
	* netx/net/sourceforge/jnlp/services/XClipboardService.java: Likewise.
	* netx/net/sourceforge/jnlp/services/XExtendedService.java: Likewise.
	* netx/net/sourceforge/jnlp/services/XFileOpenService.java: Likewise.
	* netx/net/sourceforge/jnlp/services/XFileSaveService.java: Likewise.
	* netx/net/sourceforge/jnlp/security/SecurityDialogMessage.java:
	New class.
	* netx/net/sourceforge/jnlp/security/SecurityDialogMessageHandler.java:
	New class.
	(run): New method. Runs the security message loop.
	(handleMessage): New method. Handles a SecurityDialogMessage to show a
	security warning.
	(postMessage): New method. Posts a message to sthe security message
	queue.
	* netx/net/sourceforge/jnlp/security/SecurityWarning.java: New class.
	Move AccessType and DialogType from SecurityWarningDialog to here.
	(showAccessWarningDialog): Moved from SecurityWarningDialog to here.
	(showAccessWarningDialog): Moved from SecurityWarningDialog to here.
	Modified to post messages to the security queue instead of showing a
	SecurityWarningDialog directly.
	(showNotAllSignedWarningDialog): Likewise.
	(showCertWarningDialog): Likewise.
	(showAppletWarning): Likewise.
	(getUserReponse): New method. Posts a message to the security thread and
	blocks until it gets a response from the user.

2010-10-20  Andrew John Hughes  <ahughes@redhat.com>

	* netx/javax/jnlp/ServiceManager.java:
	(lookupTable): Add generic types.
	* netx/net/sourceforge/jnlp/AppletDesc.java:
	(parameters): Likewise.
	(AppletDesc(String,String,URL,int,int,Map)): Likewise.
	(getParameters()): Likewise.
	* netx/net/sourceforge/jnlp/ApplicationDesc.java:
	(getArguments()): Remove redundant cast.
	(addArgument(String)): Add generic typing.
	* netx/net/sourceforge/jnlp/ExtensionDesc.java:
	(extToPart): Add generic types.
	(eagerExtParts): Likewise.
	* netx/net/sourceforge/jnlp/InformationDesc.java:
	(info): Likewise.
	(getIcons(Object)): Add generic typing.
	(getAssociations()): Likewise.
	(getRelatedContents()): Likewise.
	(getItem(Object)): Likewise.
	(getItems(Object)): Likewise.
	(addItem(String,Object)): Likewise.
	* netx/net/sourceforge/jnlp/JNLPFile.java:
	(resources): Likewise.
	(InformationDesc.getItems(Object)): Likewise.
	(getResources(Class)): Likewise.
	* netx/net/sourceforge/jnlp/LaunchException.java:
	(getCauses()): Likewise.
	* netx/net/sourceforge/jnlp/Launcher.java:
	(launchApplication(JNLPFile)): Likewise.
	* netx/net/sourceforge/jnlp/NetxPanel.java:
	(NetxPanel(URL,Hashtable)): Likewise.
	(NetxPanel(URL,Hashtable,boolean)): Likewise.
	* netx/net/sourceforge/jnlp/Node.java:
	(getChildNodes()): Likewise.
	* netx/net/sourceforge/jnlp/Parser.java:
	(getResources(Node,boolean)): Likewise.
	(getInfo(Node)): Likewise.
	(getInformationDesc(Node)): Likewise.
	(getApplet(Node)): Likewise.
	(getApplication(Node)): Likewise.
	(splitString(String)): Likewise.
	(getLocales(Node)): Likewise.
	(getChildNodes(Node,String)): Likewise.
	* netx/net/sourceforge/jnlp/PluginBridge.java:
	Fix variable naming and add generic types.
	(cacheJars): Changed from cache_jars.
	(cacheExJars): Changed from cache_ex-jars.
	(atts): Add generic typing.
	(PluginBridge(URL,URL,String,String,int,int,Hashtable)): Likewise.
	(getInformation(Locale)): Likewise.
	(getResources(Locale,String,String)): Likewise.
	(getJARs()): Avoid excessive copying; filtering already performed
	by getResources in JNLPFile.
	* netx/net/sourceforge/jnlp/ResourcesDesc.java:
	(resources): Add generic typing.
	(getJREs()): Likewise.
	(getJARs()): Likewise.
	(getJARs(String)): Likewise.
	(getExtensions()): Likewise.
	(getPackages()): Likewise.
	(getPackages(String)): Likewise.
	(getProperties()): Likewise.
	(getPropertiesMap()): Likewise.
	(getResources(Class)): Make generic.
	* netx/net/sourceforge/jnlp/Version.java:
	(matches(Version)): Add generic types.
	(matchesAny(Version)): Likewise.
	(matchesSingle(String)): Likewise.
	(matches(String,String)): Likewise.
	(equal(List,List)): Likewise.
	(greater(List,List)): Likewise.
	(compare(String,String)): Use Integer.valueOf.
	(normalize(List,int)): Add generic types, using
	a List of lists rather than an array of lists.
	(getVersionStrings()): Add generic types.
	(getParts()): Likewise.
	* netx/net/sourceforge/jnlp/cache/CacheUtil.java:
	(waitForResources(ApplicationInstance,ResourceTracker,
	URL,String)): Likewise.
	* netx/net/sourceforge/jnlp/cache/DefaultDownloadIndicator.java:
	(getListener(ApplicatonInstance,String,URL)): Use setVisible instead
	of show().
	(disposeListener(DownloadServiceListener)): Use setVisible instead
	of hide().
	(DownloadPanel.urls): Add generic typing.
	(DownloadPanel.panels): Likewise.
	(DownloadPanel.update(URL,String,long,long,int)): Fix formatting.
	Add generic types.
	* netx/net/sourceforge/jnlp/cache/Resource.java:
	(resources): Add generic typing.
	(trackers): Likewise.
	(getResource(URL,Version,UpdatePolicy)): Use generic types.
	(getTracker()): Likewise.
	(addTracker(ResourceTracker)): Likewise.
	(fireDownloadEvent()): Likewise.
	* netx/net/sourceforge/jnlp/cache/ResourceTracker.java:
	(prefetchTrackers): Add generic typing.
	(queue): Likewise.
	(active): Likewise.
	(resources): Likewise.
	(listeners): Likewise.
	(fireDownloadEvent(Resource)): Remove unneeded cast.
	(getPrefetch()): Use generic typing.
	(selectByFlag(List,int,int)): Likewise.
	(getResource(URL)): Likewise.
	* netx/net/sourceforge/jnlp/runtime/AppletEnvironment.java:
	(weakClips): Add generic types.
	(destroy()): Use generic typing.
	(getApplets()): Likewise.
	(getStreamKeys()): Likewise.
	* netx/net/sourceforge/jnlp/runtime/ApplicationInstance.java:
	(weakWindows): Add generic types.
	(installEnvironment()): Likewise.
	(destroy()): Remove redundant cast.
	* netx/net/sourceforge/jnlp/runtime/Boot.java:
	Extend PrivilegedAction<Void>.
	(run()): Add generic typing.
	(getOptions(String)): Likewise.
	* netx/net/sourceforge/jnlp/runtime/Boot13.java:
	(main(String[]): Likewise.
	* netx/net/sourceforge/jnlp/runtime/JNLPClassLoader.java:
	Fix formatting.
	(urlToLoader): Add generic types.
	(resourcePermissions): Likewise.
	(available): Likewise.
	(jarEntries): Likewise.
	(getInstance(JNLPFile,UpdatePolicy)): Remove redundant cast.
	(getInstance(URL,String,Version,UpdatePolicy)): Likewise.
	(initializeExtensions()): Add generic types.
	(initializePermissions()): Likewise.
	(initializeResources()): Likewise.
	(getPermissions(CodeSource)): Likewise.
	(fillInPartJars(List)): Likewise.
	(activateJars(List)): Likewise.
	(loadClass(String)): Likewise.  Suppress warnings due to
	sun.misc.JarIndex usage.
	(findResources(String)): Mark as overriding.  Add generic
	types.
	(getExtensionName()): Add @Deprecated annotation.
	(getExtensionHREF()): Likewise.
	* netx/net/sourceforge/jnlp/runtime/JNLPSecurityManager.java:
	(weakWindows): Add generic typing.
	(weakApplications): Likewise.
	(getApplication(Window)): Remove redundant casts.  Add w,
	which is window cast to Window.
	* netx/net/sourceforge/jnlp/services/ServiceUtil.java:
	(invoke(Object,Method,Object[])): Use generic types.
	* netx/net/sourceforge/jnlp/services/XPersistenceService.java:
	(getNames(URL)): Likewise.
	* netx/net/sourceforge/jnlp/tools/JarSigner.java:
	(verifyJars(List,ResourceTracker)): Remove redundant cast.
	* netx/net/sourceforge/jnlp/util/WeakList.java:
	Redesign as a generic type.
	(refs): Add generic types.
	(deref(WeakReference)): Likewise.
	(get(int)): Likewise.
	(set(int,Object)): Likewise.
	(add(int,E)): Likewise.
	(remove()): Likewise.
	(hardList()): Likewise.
	* netx/net/sourceforge/nanoxml/XMLElement.java:
	(attributes): Add generic typing.
	(children): Likewise.
	(entities): Likewise.
	(XMLElement()): Use generic types.
	(XMLElement(Hashtable): Likewise.
	(resolveEntity(StringBuffer)): Remove redundant cast.

2010-10-20  Omair Majid  <omajid@redhat.com>

	* AUTHORS: Add Francis Kung, Andrew Su, Joshua Sumali, Mark Wielaard and
	Man Lung Wong. Add link to forked Netx project.

2010-10-20  Matthias Klose  <doko@ubuntu.com>

	* AUTHORS: Add myself.

2010-10-20  Andrew Su  <asu@redhat.com>

	* PluginBridge.java:
	(PluginBridge): Added parsing for jnlp_href, and reading the jnlp file
	for applet parameters.

2010-10-20  Matthias Klose  <doko@ubuntu.com>

	* Makefile.am (stamps/extra-class-files.stamp): Fix -sourcepath.

2010-10-20  Omair Majid  <omajid@redhat.com>

	* netx/net/sourceforge/jnlp/runtime/JNLPClassLoader.java
	(initializeResources): Do not perform url encoding on the file url. Stay
	consistent with the unencoded urls used in getPermissions.

2010-10-20  Omair Majid  <omajid@redhat.com>

	* netx/net/sourceforge/jnlp/runtime/JNLPClassLoader.java
	(JNLPClassLoader): Call installShutdownHooks.
	(installShutdownHooks): New method. Installs a shutdown hook to
	recursively delete the contents of nativeDir.
	(activateNative): Only create a nativeDir if there are native
	libraries.

2010-10-19  Deepak Bhole  <dbhole@redhat.com>

	* Makefile.am:
	($(NETX_DIR)/launcher/javaws): Use $(NETX_DIR).

2010-10-19  Deepak Bhole  <dbhole@redhat.com>

	* Makefile.am:
	(NETX_DIR): New variable representing the NetX build dir.
	(NETX_LAUNCHER_OBJECTS): Prefix with $(NETX_DIR).
	(LAUNCHER_LINK): Fixed escaping of ORIGIN to the rpath argument.
	(all-local): Fix javaws launcher path.
	(install-exec-local): Likewise, and use $(NETX_DIR) for NetX classes.jar.
	(clean-plugin): Remove launcher.
	(liveconnect): Use NETX_DIR in classpath.
	(netx): Use NETX_DIR throughout.
	(netx-dist): Likewise.
	(clean-netx): Likewise.
	($(NETX_DIR)/launcher/%.o)): Likewise.
	* launcher/jni_md.h: Imported from OpenJDK.

2010-10-20  Matthias Klose  <doko@ubuntu.com>

	* Makefile.am: Fix build with builddir != srcdir.

2010-10-19  Andrew John Hughes  <ahughes@redhat.com>

	* Makefile.am:
	(PLUGIN_LAUNCHER_OBJECTS): Do prefixing once.
	(NETX_LAUNCHER_OBJECTS): Likewise for NetX.
	(pluginappletviewer): Use PLUGIN_LAUNCHER_OBJECTS.
	(javaws): Use NETX_LAUNCHER_OBJECTS.
	* configure.ac: Re-enable foreign (I want to use
	GNU make!)
	* README: Use gmake not make.

2010-10-19  Andrew John Hughes  <ahughes@redhat.com>

	* .hgignore,
	* Makefile.am,
	* acinclude.m4,
	* autogen.sh,
	* configure.ac,
	* extra/net/sourceforge/jnlp/about/HTMLPanel.java,
	* extra/net/sourceforge/jnlp/about/Main.java,
	* extra/net/sourceforge/jnlp/about/resources/about.html,
	* extra/net/sourceforge/jnlp/about/resources/applications.html,
	* extra/net/sourceforge/jnlp/about/resources/notes.html,
	* javac.in,
	* javaws.desktop: Imported from IcedTea6.
	* launcher/java.c,
	* launcher/java.h,
	* launcher/java_md.c,
	* launcher/java_md.h,
	* launcher/jli_util.h,
	* launcher/jni.h,
	* launcher/jvm.h,
	* launcher/jvm_md.h,
	* launcher/manifest_info.h,
	* launcher/splashscreen.h,
	* launcher/splashscreen_stubs.c,
	* launcher/version_comp.h,
	* launcher/wildcard.h: Imported from OpenJDK.
	* netx/javaws.1,
	* netx/javax/jnlp/BasicService.java,
	* netx/javax/jnlp/ClipboardService.java,
	* netx/javax/jnlp/DownloadService.java,
	* netx/javax/jnlp/DownloadServiceListener.java,
	* netx/javax/jnlp/ExtendedService.java,
	* netx/javax/jnlp/ExtensionInstallerService.java,
	* netx/javax/jnlp/FileContents.java,
	* netx/javax/jnlp/FileOpenService.java,
	* netx/javax/jnlp/FileSaveService.java,
	* netx/javax/jnlp/JNLPRandomAccessFile.java,
	* netx/javax/jnlp/PersistenceService.java,
	* netx/javax/jnlp/PrintService.java,
	* netx/javax/jnlp/ServiceManager.java,
	* netx/javax/jnlp/ServiceManagerStub.java,
	* netx/javax/jnlp/SingleInstanceListener.java,
	* netx/javax/jnlp/SingleInstanceService.java,
	* netx/javax/jnlp/UnavailableServiceException.java,
	* netx/net/sourceforge/jnlp/AppletDesc.java,
	* netx/net/sourceforge/jnlp/ApplicationDesc.java,
	* netx/net/sourceforge/jnlp/AssociationDesc.java,
	* netx/net/sourceforge/jnlp/ComponentDesc.java,
	* netx/net/sourceforge/jnlp/DefaultLaunchHandler.java,
	* netx/net/sourceforge/jnlp/ExtensionDesc.java,
	* netx/net/sourceforge/jnlp/IconDesc.java,
	* netx/net/sourceforge/jnlp/InformationDesc.java,
	* netx/net/sourceforge/jnlp/InstallerDesc.java,
	* netx/net/sourceforge/jnlp/JARDesc.java,
	* netx/net/sourceforge/jnlp/JNLPFile.java,
	* netx/net/sourceforge/jnlp/JNLPSplashScreen.java,
	* netx/net/sourceforge/jnlp/JREDesc.java,
	* netx/net/sourceforge/jnlp/LaunchException.java,
	* netx/net/sourceforge/jnlp/LaunchHandler.java,
	* netx/net/sourceforge/jnlp/Launcher.java,
	* netx/net/sourceforge/jnlp/MenuDesc.java,
	* netx/net/sourceforge/jnlp/NetxPanel.java,
	* netx/net/sourceforge/jnlp/Node.java,
	* netx/net/sourceforge/jnlp/PackageDesc.java,
	* netx/net/sourceforge/jnlp/ParseException.java,
	* netx/net/sourceforge/jnlp/Parser.java,
	* netx/net/sourceforge/jnlp/PluginBridge.java,
	* netx/net/sourceforge/jnlp/PropertyDesc.java,
	* netx/net/sourceforge/jnlp/RelatedContentDesc.java,
	* netx/net/sourceforge/jnlp/ResourcesDesc.java,
	* netx/net/sourceforge/jnlp/SecurityDesc.java,
	* netx/net/sourceforge/jnlp/ShortcutDesc.java,
	* netx/net/sourceforge/jnlp/StreamEater.java,
	* netx/net/sourceforge/jnlp/UpdateDesc.java,
	* netx/net/sourceforge/jnlp/Version.java,
	* netx/net/sourceforge/jnlp/cache/CacheEntry.java,
	* netx/net/sourceforge/jnlp/cache/CacheUtil.java,
	* netx/net/sourceforge/jnlp/cache/DefaultDownloadIndicator.java,
	* netx/net/sourceforge/jnlp/cache/DownloadIndicator.java,
	* netx/net/sourceforge/jnlp/cache/Resource.java,
	* netx/net/sourceforge/jnlp/cache/ResourceTracker.java,
	* netx/net/sourceforge/jnlp/cache/UpdatePolicy.java,
	* netx/net/sourceforge/jnlp/cache/package.html,
	* netx/net/sourceforge/jnlp/event/ApplicationEvent.java,
	* netx/net/sourceforge/jnlp/event/ApplicationListener.java,
	* netx/net/sourceforge/jnlp/event/DownloadEvent.java,
	* netx/net/sourceforge/jnlp/event/DownloadListener.java,
	* netx/net/sourceforge/jnlp/event/package.html,
	* netx/net/sourceforge/jnlp/package.html,
	* netx/net/sourceforge/jnlp/resources/Manifest.mf,
	* netx/net/sourceforge/jnlp/resources/Messages.properties,
	* netx/net/sourceforge/jnlp/resources/about.jnlp,
	* netx/net/sourceforge/jnlp/resources/default.jnlp,
	* netx/net/sourceforge/jnlp/runtime/AppThreadGroup.java,
	* netx/net/sourceforge/jnlp/runtime/AppletAudioClip.java,
	* netx/net/sourceforge/jnlp/runtime/AppletEnvironment.java,
	* netx/net/sourceforge/jnlp/runtime/AppletInstance.java,
	* netx/net/sourceforge/jnlp/runtime/ApplicationInstance.java,
	* netx/net/sourceforge/jnlp/runtime/Boot.java,
	* netx/net/sourceforge/jnlp/runtime/Boot13.java,
	* netx/net/sourceforge/jnlp/runtime/JNLPClassLoader.java,
	* netx/net/sourceforge/jnlp/runtime/JNLPPolicy.java,
	* netx/net/sourceforge/jnlp/runtime/JNLPRuntime.java,
	* netx/net/sourceforge/jnlp/runtime/JNLPSecurityManager.java,
	* netx/net/sourceforge/jnlp/runtime/package.html,
	* netx/net/sourceforge/jnlp/security/AccessWarningPane.java,
	* netx/net/sourceforge/jnlp/security/AppletWarningPane.java,
	* netx/net/sourceforge/jnlp/security/CertVerifier.java,
	* netx/net/sourceforge/jnlp/security/CertWarningPane.java,
	* netx/net/sourceforge/jnlp/security/CertsInfoPane.java,
	* netx/net/sourceforge/jnlp/security/HttpsCertVerifier.java,
	* netx/net/sourceforge/jnlp/security/MoreInfoPane.java,
	* netx/net/sourceforge/jnlp/security/NotAllSignedWarningPane.java,
	* netx/net/sourceforge/jnlp/security/SecurityDialogPanel.java,
	* netx/net/sourceforge/jnlp/security/SecurityUtil.java,
	* netx/net/sourceforge/jnlp/security/SecurityWarningDialog.java,
	* netx/net/sourceforge/jnlp/security/SingleCertInfoPane.java,
	* netx/net/sourceforge/jnlp/security/VariableX509TrustManager.java,
	* netx/net/sourceforge/jnlp/security/viewer/CertificatePane.java,
	* netx/net/sourceforge/jnlp/security/viewer/CertificateViewer.java,
	* netx/net/sourceforge/jnlp/services/ExtendedSingleInstanceService.java,
	* netx/net/sourceforge/jnlp/services/InstanceExistsException.java,
	* netx/net/sourceforge/jnlp/services/ServiceUtil.java,
	* netx/net/sourceforge/jnlp/services/SingleInstanceLock.java,
	* netx/net/sourceforge/jnlp/services/XBasicService.java,
	* netx/net/sourceforge/jnlp/services/XClipboardService.java,
	* netx/net/sourceforge/jnlp/services/XDownloadService.java,
	* netx/net/sourceforge/jnlp/services/XExtendedService.java,
	* netx/net/sourceforge/jnlp/services/XExtensionInstallerService.java,
	* netx/net/sourceforge/jnlp/services/XFileContents.java,
	* netx/net/sourceforge/jnlp/services/XFileOpenService.java,
	* netx/net/sourceforge/jnlp/services/XFileSaveService.java,
	* netx/net/sourceforge/jnlp/services/XJNLPRandomAccessFile.java,
	* netx/net/sourceforge/jnlp/services/XPersistenceService.java,
	* netx/net/sourceforge/jnlp/services/XPrintService.java,
	* netx/net/sourceforge/jnlp/services/XServiceManagerStub.java,
	* netx/net/sourceforge/jnlp/services/XSingleInstanceService.java,
	* netx/net/sourceforge/jnlp/services/package.html,
	* netx/net/sourceforge/jnlp/tools/CharacterEncoder.java,
	* netx/net/sourceforge/jnlp/tools/HexDumpEncoder.java,
	* netx/net/sourceforge/jnlp/tools/JarRunner.java,
	* netx/net/sourceforge/jnlp/tools/JarSigner.java,
	* netx/net/sourceforge/jnlp/tools/JarSignerResources.java,
	* netx/net/sourceforge/jnlp/tools/KeyStoreUtil.java,
	* netx/net/sourceforge/jnlp/tools/KeyTool.java,
	* netx/net/sourceforge/jnlp/util/FileUtils.java,
	* netx/net/sourceforge/jnlp/util/PropertiesFile.java,
	* netx/net/sourceforge/jnlp/util/Reflect.java,
	* netx/net/sourceforge/jnlp/util/WeakList.java,
	* netx/net/sourceforge/jnlp/util/XDesktopEntry.java,
	* netx/net/sourceforge/nanoxml/XMLElement.java,
	* netx/net/sourceforge/nanoxml/XMLParseException.java,
	* plugin/icedteanp/IcedTeaJavaRequestProcessor.cc,
	* plugin/icedteanp/IcedTeaJavaRequestProcessor.h,
	* plugin/icedteanp/IcedTeaNPPlugin.cc,
	* plugin/icedteanp/IcedTeaNPPlugin.h,
	* plugin/icedteanp/IcedTeaPluginRequestProcessor.cc,
	* plugin/icedteanp/IcedTeaPluginRequestProcessor.h,
	* plugin/icedteanp/IcedTeaPluginUtils.cc,
	* plugin/icedteanp/IcedTeaPluginUtils.h,
	* plugin/icedteanp/IcedTeaRunnable.cc,
	* plugin/icedteanp/IcedTeaRunnable.h,
	* plugin/icedteanp/IcedTeaScriptablePluginObject.cc,
	* plugin/icedteanp/IcedTeaScriptablePluginObject.h,
	* plugin/icedteanp/java/netscape/javascript/JSException.java,
	* plugin/icedteanp/java/netscape/javascript/JSObject.java,
	* plugin/icedteanp/java/netscape/javascript/JSObjectCreatePermission.java,
	* plugin/icedteanp/java/netscape/javascript/JSProxy.java,
	* plugin/icedteanp/java/netscape/javascript/JSRunnable.java,
	* plugin/icedteanp/java/netscape/javascript/JSUtil.java,
	* plugin/icedteanp/java/netscape/security/ForbiddenTargetException.java,
	* plugin/icedteanp/java/sun/applet/AppletSecurityContextManager.java,
	* plugin/icedteanp/java/sun/applet/GetMemberPluginCallRequest.java,
	* plugin/icedteanp/java/sun/applet/GetWindowPluginCallRequest.java,
	* plugin/icedteanp/java/sun/applet/JavaConsole.java,
	* plugin/icedteanp/java/sun/applet/MethodOverloadResolver.java,
	* plugin/icedteanp/java/sun/applet/PasswordAuthenticationDialog.java,
	* plugin/icedteanp/java/sun/applet/PluginAppletSecurityContext.java,
	* plugin/icedteanp/java/sun/applet/PluginAppletViewer.java,
	* plugin/icedteanp/java/sun/applet/PluginCallRequest.java,
	* plugin/icedteanp/java/sun/applet/PluginCallRequestFactory.java,
	* plugin/icedteanp/java/sun/applet/PluginClassLoader.java,
	* plugin/icedteanp/java/sun/applet/PluginCookieInfoRequest.java,
	* plugin/icedteanp/java/sun/applet/PluginCookieManager.java,
	* plugin/icedteanp/java/sun/applet/PluginDebug.java,
	* plugin/icedteanp/java/sun/applet/PluginException.java,
	* plugin/icedteanp/java/sun/applet/PluginMain.java,
	* plugin/icedteanp/java/sun/applet/PluginMessageConsumer.java,
	* plugin/icedteanp/java/sun/applet/PluginMessageHandlerWorker.java,
	* plugin/icedteanp/java/sun/applet/PluginObjectStore.java,
	* plugin/icedteanp/java/sun/applet/PluginProxyInfoRequest.java,
	* plugin/icedteanp/java/sun/applet/PluginProxySelector.java,
	* plugin/icedteanp/java/sun/applet/PluginStreamHandler.java,
	* plugin/icedteanp/java/sun/applet/RequestQueue.java,
	* plugin/icedteanp/java/sun/applet/TestEnv.java,
	* plugin/icedteanp/java/sun/applet/VoidPluginCallRequest.java,
	* plugin/tests/LiveConnect/DummyObject.java,
	* plugin/tests/LiveConnect/OverloadTestHelper1.java,
	* plugin/tests/LiveConnect/OverloadTestHelper2.java,
	* plugin/tests/LiveConnect/OverloadTestHelper3.java,
	* plugin/tests/LiveConnect/PluginTest.java,
	* plugin/tests/LiveConnect/build,
	* plugin/tests/LiveConnect/common.js,
	* plugin/tests/LiveConnect/index.html,
	* plugin/tests/LiveConnect/jjs_eval_test.js,
	* plugin/tests/LiveConnect/jjs_func_parameters_tests.js,
	* plugin/tests/LiveConnect/jjs_func_rettype_tests.js,
	* plugin/tests/LiveConnect/jjs_get_tests.js,
	* plugin/tests/LiveConnect/jjs_set_tests.js,
	* plugin/tests/LiveConnect/jsj_func_overload_tests.js,
	* plugin/tests/LiveConnect/jsj_func_parameters_tests.js,
	* plugin/tests/LiveConnect/jsj_func_rettype_tests.js,
	* plugin/tests/LiveConnect/jsj_get_tests.js,
	* plugin/tests/LiveConnect/jsj_set_tests.js,
	* plugin/tests/LiveConnect/jsj_type_casting_tests.js,
	* plugin/tests/LiveConnect/jsj_type_conversion_tests.js:
	Initial import from IcedTea6.
	* AUTHORS,
	* COPYING
	* INSTALL,
	* NEWS,
	* README: New documentation.
